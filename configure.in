dnl *************************************************************
dnl
dnl Process this file with autoconf to produce a configure script
dnl 
dnl *************************************************************

dnl -------------------------------------------------------------
dnl initializing procedures
dnl -------------------------------------------------------------
AC_PREREQ(2.59)
AC_INIT(ccruncher, 1.3, gerard@mail.generacio.com)
AC_CONFIG_SRCDIR([src/kernel/MonteCarlo.hpp])
AC_CONFIG_HEADER([src/utils/config.h],,[src/utils/config.h.in])
AM_INIT_AUTOMAKE

dnl -------------------------------------------------------------
dnl rebuild makefile prevention 
dnl solve automake versions conflicts
dnl -------------------------------------------------------------
AM_MAINTAINER_MODE

dnl -------------------------------------------------------------
dnl check for tools
dnl -------------------------------------------------------------
AC_PROG_CXX
AC_PROG_CPP
AC_PROG_INSTALL

dnl -------------------------------------------------------------
dnl checks for libraries
dnl -------------------------------------------------------------
AC_CHECK_LIB([m], [main])
AC_CHECK_LIB([expat], [XML_ParserCreate],,
    [AC_MSG_ERROR([cannot find the expat library]) ])
AC_CHECK_HEADERS(expat.h,,
    [AC_MSG_ERROR([cannot find expat headers]) ])
AC_CHECK_LIB([z], [zlibVersion],,
    [AC_MSG_ERROR([cannot find the zlib library]) ])
AC_CHECK_HEADERS(zlib.h,,
    [AC_MSG_ERROR([cannot find zlib headers]) ])

dnl -------------------------------------------------------------
dnl checks for header
dnl -------------------------------------------------------------
AC_HEADER_STDBOOL
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_TIME
AC_CHECK_HEADERS([limits.h stdlib.h unistd.h])
AC_CHECK_HEADERS([float.h malloc.h])

dnl -------------------------------------------------------------
dnl checks for functions
dnl -------------------------------------------------------------
AC_CHECK_FUNCS([getcwd])
AC_CHECK_FUNCS([mkdir])
AC_CHECK_FUNCS([pow])
AC_CHECK_FUNCS([sqrt])
AC_CHECK_FUNCS([strtol])
AC_CHECK_FUNCS([floor])
AC_CHECK_FUNCS([strchr])
AC_CHECK_FUNCS([gettimeofday])
AC_FUNC_CLOSEDIR_VOID
AC_FUNC_ERROR_AT_LINE
AC_FUNC_STRTOD
AC_FUNC_MKTIME
AC_FUNC_ALLOCA

dnl -------------------------------------------------------------
dnl other checks (consts, structs, types)
dnl -------------------------------------------------------------
AC_C_CONST
AC_C_INLINE
AC_C_RESTRICT
AC_STRUCT_TM
AC_TYPE_SIZE_T

dnl -------------------------------------------------------------
dnl setting debug/optimization options
dnl   optimized mode => -O3
dnl   debug mode => -g -Wall -Wextra -Wshadow
dnl -------------------------------------------------------------
AC_ARG_ENABLE(debug, 
  [  --enable-debug    Turn on debugging (default=no)],
  [case "${enableval}" in
    yes) debug=true ;;
    no)  debug=false ;;
    *) AC_MSG_ERROR(bad value ${enableval} for --enable-debug) ;;
  esac],
  [debug=false])

if test x$debug = xtrue ; then
  CXXFLAGS="-g -Wall -Wextra -Wshadow"
  AC_SUBST([LDFLAGS], [-rdynamic])
else
  CXXFLAGS="-O3"
  AC_DEFINE([NDEBUG], 1, [Assertions are disabled when this is defined.])
fi

dnl -------------------------------------------------------------
dnl setting profiler options
dnl   profiler mode => -pg
dnl -------------------------------------------------------------
AC_ARG_ENABLE(profiler,
  [  --enable-profiler    Turn on profiler (default=no)],
  [case "${enableval}" in
    yes) profiler=true ;;
    no)  profiler=false ;;
    *) AC_MSG_ERROR(bad value ${enableval} for --enable-profiler) ;;
  esac],
  [profiler=false])

if test x$profiler = xtrue ; then
  CXXFLAGS="$CXXFLAGS -pg"
  AC_DEFINE([PROFILER], 1, [Profiler instructions are added when this is defined.])
fi

dnl -------------------------------------------------------------
dnl setting mpi environement on/off
dnl -------------------------------------------------------------
AC_ARG_ENABLE(mpi,
  [  --enable-mpi    Builds a parallel version (default=no)],
  [case "${enableval}" in
    yes) mpi=true ;;
    no)  mpi=false ;;
    *) AC_MSG_ERROR(bad value ${enableval} for --enable-mpi) ;;
  esac],
  [mpi=false])

if test x$mpi = xtrue ; then
  AC_CHECK_HEADERS(mpi.h,,
    [AC_MSG_ERROR([cannot find mpi headers]) ])
  AC_DEFINE([USE_MPI], 1, [Add parallel instructions to code.])
  AC_SUBST([CXX], [mpic++])
  AC_SUBST([CXXLD], [mpic++])
else
  AC_SUBST([CXXLD], ['$(CXX)'])
fi

dnl -------------------------------------------------------------
dnl setting compiler options
dnl -------------------------------------------------------------
AC_SUBST(CXXFLAGS)

dnl -------------------------------------------------------------
dnl defining include directories
dnl -------------------------------------------------------------
AC_SUBST([AM_CPPFLAGS], 
         ['-I$(top_srcdir)/src -I$(top_srcdir)/deps/jama-1.2.5 -I$(top_srcdir)/deps/Mersenne-1.0 -I$(top_srcdir)/deps/MiniCppUnit-2.5 -I$(top_srcdir)/deps/gzstream-1.5'])

dnl -------------------------------------------------------------
dnl defining some usefull variables in config.h
dnl -------------------------------------------------------------
AC_DEFINE_UNQUOTED([BUILD_USER], ["`whoami`"], [build user])
AC_DEFINE_UNQUOTED([BUILD_DATE], ["`date`"], [build date])
AC_DEFINE_UNQUOTED([BUILD_HOST], ["`hostname -f | head -n 1`"], [build host name])

dnl -------------------------------------------------------------
dnl completing config.h.in
dnl -------------------------------------------------------------
AH_BOTTOM([
/* Aggregator buffer size (in bytes) */
#define CCMAXBUFSIZE 1024*1024

/* flush results time (to disk or to master) */
#define CCEFLUSHSECS 30.0

/* subversion identifier */
#define SVNVERSION "R465M"

/* required by Microsoft project */
#ifdef _MSC_VER
#include "../win32/winconfig.h"
#endif

/* cygwin patch */
#if defined (__CYGWIN__) 
#define NAN sqrt(-1.0)
#endif

])

dnl -------------------------------------------------------------
dnl makefile's to be built
dnl -------------------------------------------------------------
AC_CONFIG_FILES([Makefile build/Makefile])
AC_OUTPUT

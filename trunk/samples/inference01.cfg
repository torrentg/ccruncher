/*
  CCruncher inference configuration file
  More info at http://www.ccruncher.net/
*/

// list of factors
// length = NFACTORS
factors= ["S1", "S2", "S3", "S4"]

// list of ratings
// length = NRATINGS
ratings = ["A", "B", "C", "D"]

// 1-year default probabilities
// length = NRATINGS
dprobs = [0.05, 0.025, 0.03, 0.045]

// number of obligors by year-factor-rating
// dim = NOBS x (NFACTORSxNRATINGS)
// each row is a year
nobligors = (
  //[S1-A, S1-B, S1-C, S1-D, S2-A, S2-B, S2-C, S2-D, S3-A, S3-B, S3-C, S3-D, S4-A, S4-B, S4-C, S4-D]
  [1000, 0, 0, 0, 0, 1000, 0, 0, 0, 0, 1000, 0, 0, 0, 0, 1000],
  [1000, 0, 0, 0, 0, 1000, 0, 0, 0, 0, 1000, 0, 0, 0, 0, 1000],
  [1000, 0, 0, 0, 0, 1000, 0, 0, 0, 0, 1000, 0, 0, 0, 0, 1000],
  [1000, 0, 0, 0, 0, 1000, 0, 0, 0, 0, 1000, 0, 0, 0, 0, 1000],
  [1000, 0, 0, 0, 0, 1000, 0, 0, 0, 0, 1000, 0, 0, 0, 0, 1000],
  [1000, 0, 0, 0, 0, 1000, 0, 0, 0, 0, 1000, 0, 0, 0, 0, 1000]
)

// number of observed defaults by year-factor-rating
// dim = NOBS x (NFACTORSxNRATINGS)
// same format than nobligors
ndefaults = (
  [27,  0, 0, 0, // factor 1
    0, 24, 0, 0, // factor 2
    0,  0, 5, 0, // factor 3
    0,  0, 0, 4  // factor 4
  ],
  [200, 0, 0, 0, 0, 61, 0, 0, 0, 0, 46, 0, 0, 0, 0, 4],
  [28, 0, 0, 0, 0, 9, 0, 0, 0, 0, 9, 0, 0, 0, 0, 21],
  [13, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0],
  [64, 0, 0, 0, 0, 12, 0, 0, 0, 0, 9, 0, 0, 0, 0, 9],
  [49, 0, 0, 0, 0, 19, 0, 0, 0, 0, 23, 0, 0, 0, 0, 441]
)

/*
  not update a component:
    - init = fixed value
    - sigma = 0
    - level in [0,1]
    
  fix a param:
    - init [optional]
    - sigma > 0
    - level = 0
    
  auto update param:
    - init [optional]
    - sigma > 0
    - level in (0,1)
*/

/* 
  T-Student degrees of freedom
  Gaussian case :
    value = 1000.0;
    sigma = 0.0;
    param = 0.0;
*/
NU = {
  // initial value
  // it is optional
  // default value = 15.0
  value = 7.0;
  // if sigma = 0.0, then value is mandatory
  sigma = 0.1;
  level = 0.33;
}

W = {
  value = [0.272372, 0.224232, 0.380719, 0.812991];
  sigma = [0.0108724, 0.0148203, 0.0122298, 0.00565512];
  level = [0.234, 0.234, 0.234, 0.234];
}

R = {
  value = [-0.0973919, 0.0331618, 0.230274, 0.178709, 0.196838, 0.0845878];
  sigma = [0.023917, 0.0301561, 0.0272508, 0.0290198, 0.0268338, 0.0347299];
  level = [0.6, 0.6, 0.6, 0.6, 0.6, 0.6];
}

Z = {
  init = [0, 0, 0, 0];
  sigma = 0.1;
  level = 0.44;
}

S = {
  init = 7.0;
  sigma = 0.5;
  level = 0.44;
}


/*
//----------------------------------------------------
// degres of freedom (t-Student parameter)
// dim = 1 x 1
// range = [2,inf)
//----------------------------------------------------
NU.init = 7

//----------------------------------------------------
// factor loadings
// dim = 1 x NFACTORS
// range = (0,1)
//----------------------------------------------------
W.init = [0.272372, 0.224232, 0.380719, 0.812991]

//----------------------------------------------------
// correlation values
// dim = 1 x (NFACTORSx(NFACTORS-1)/2)
// range = (-1,+1)
// 1-factors: none
// 2-factors: S12
// 3-factors: S12 S13 S23
// 4-factors: S12 S13 S14 S23 S24 S34
// etc.
//----------------------------------------------------
R.init = [-0.0973919, 0.0331618, 0.230274, 0.178709, 0.196838, 0.0845878]

//----------------------------------------------------
// Normal latent variables
// dim = NOBS x NFACTORS, or 1 x NFACTORS, or 1 x 1
// range = (-inf,+inf)
// obs: if only 1 row, then all obs share the same value
// obs: if only 1 value, then all obs and components share the same value
//----------------------------------------------------
Z.init = [0, 0, 0, 0]

//----------------------------------------------------
// Chi-squared latent variables
// dim = NOBS x 1, or 1 x 1
// range = (0,+inf)
// obs: if only 1 value, then all obs share the same value
//----------------------------------------------------
S.init = 7

//----------------------------------------------------
// Parameters to be tunned to achieve an 
// acceptance rate in range [25%-40%]
// Parameter values are in range (0,inf)
//----------------------------------------------------
NU.sigma = [0.1]
W.sigma = [0.0108724, 0.0148203, 0.0122298, 0.00565512]
R.sigma = [0.023917, 0.0301561, 0.0272508, 0.0290198, 0.0268338, 0.0347299]
Z.sigma = [0.1]
S.sigma = [0.5]

//----------------------------------------------------
// Desired acceptance rate
// Parameter values are in range (0,1)
//----------------------------------------------------
NU.level = [0.33]
W.level = [0.234, 0.234, 0.234, 0.234]
R.level = [0.6, 0.6, 0.6, 0.6, 0.6, 0.6]
Z.level = [0.44]
S.level = [0.44]
*/

/*
  ccruncher-inf input file
  More info at http://www.ccruncher.net/
*/

//----------------------------------------------------
// list of factors
// length = NFACTORS
//----------------------------------------------------
factors= ["S1", "S2", "S3", "S4"]

//----------------------------------------------------
// list of ratings
// length = NRATINGS
//----------------------------------------------------
ratings = ["A", "B", "C", "D"]

//----------------------------------------------------
// 1-year default probabilities
// length = NRATINGS
//----------------------------------------------------
dprobs = [0.05, 0.025, 0.03, 0.045]

//----------------------------------------------------
// number of obligors by year-factor-rating
// dim = NOBS x (NFACTORSxNRATINGS)
// note = each row is a year
//----------------------------------------------------
nobligors = (
  //[S1-A, S1-B, S1-C, S1-D, S2-A, S2-B, S2-C, S2-D, S3-A, S3-B, S3-C, S3-D, S4-A, S4-B, S4-C, S4-D]
  [1000, 0, 0, 0, 0, 1000, 0, 0, 0, 0, 1000, 0, 0, 0, 0, 1000],
  [1000, 0, 0, 0, 0, 1000, 0, 0, 0, 0, 1000, 0, 0, 0, 0, 1000],
  [1000, 0, 0, 0, 0, 1000, 0, 0, 0, 0, 1000, 0, 0, 0, 0, 1000],
  [1000, 0, 0, 0, 0, 1000, 0, 0, 0, 0, 1000, 0, 0, 0, 0, 1000],
  [1000, 0, 0, 0, 0, 1000, 0, 0, 0, 0, 1000, 0, 0, 0, 0, 1000],
  [1000, 0, 0, 0, 0, 1000, 0, 0, 0, 0, 1000, 0, 0, 0, 0, 1000]
)

//----------------------------------------------------
// number of observed defaults by year-factor-rating
// dim = NOBS x (NFACTORSxNRATINGS)
// note = same format than nobligors
//----------------------------------------------------
ndefaults = (
  [27,  0, 0, 0, // factor 1
    0, 24, 0, 0, // factor 2
    0,  0, 5, 0, // factor 3
    0,  0, 0, 4  // factor 4
  ],
  [200, 0, 0, 0, 0, 61, 0, 0, 0, 0, 46, 0, 0, 0, 0, 4],
  [28, 0, 0, 0, 0, 9, 0, 0, 0, 0, 9, 0, 0, 0, 0, 21],
  [13, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0],
  [64, 0, 0, 0, 0, 12, 0, 0, 0, 0, 9, 0, 0, 0, 0, 9],
  [49, 0, 0, 0, 0, 19, 0, 0, 0, 0, 23, 0, 0, 0, 0, 441]
)

/*=========================================================

  See section 'Bayesian inference' in the Technical Document.
  Sampling algorithm : Metropolis-Hastings
  Sampled values : NU, W, R, Z, S.
  Proposal distributions : Gaussian
  Prior distributions : Uniform
  
  value = Initial value. Can be omitted (default value will be used) 
          except in the case that sigma = 0. In this case it is not 
          sampled and remains fixed at the initial value.

  sigma = Standard deviation of the proposal distribution. This value 
          must be adjusted in order to minimize the auto-correlation. 
          Value in the range [0,inf). In most cases relies on the 
          interval [0.234, 0.44]. If level > 0, then sigma is adjusted 
          automatically using the Robbins-Monro process to achieve the 
          desired acceptance rate (taking the given sigma as the initial
          value). Otherwise (level = 0) sigma remains fixed.

  level = Desired acceptance rate. Value in the range [0,1). 
          Try distinct values in order to minimize the auto-correlation.

=========================================================*/

//----------------------------------------------------
// T-Student degres of freedom
// dim = 1 x 1
// range = [2,inf)
// default value = 15
// Gaussian case = { value = 1000.0; sigma = 0.0; level = 0.0; }
//----------------------------------------------------
NU = {
  // initial value
  // it is optional
  // default value = 15.0
  value = 7;
  // if sigma = 0.0, then value is mandatory
  sigma = 0.1;
  level = 0.33;
}

//----------------------------------------------------
// factor loadings (same order than factors)
// dim = 1 x NFACTORS
// range = (0,1)
// default value = 0.2
//----------------------------------------------------
W = {
  value = [0.272372, 0.224232, 0.380719, 0.812991];
  sigma = [0.0108724, 0.0148203, 0.0122298, 0.00565512];
  level = [0.234, 0.234, 0.234, 0.234];
}

//----------------------------------------------------
// correlation values
// dim = 1 x (NFACTORSx(NFACTORS-1)/2)
// range = (-1,+1)
// default value = 0
// 1-factor:  [ ]
// 2-factors: [ S12 ]
// 3-factors: [ S12, S13, S23 ]
// 4-factors: [ S12, S13, S14, S23, S24, S34 ]
// etc.
//----------------------------------------------------
R = {
  value = [-0.0973919, 0.0331618, 0.230274, 0.178709, 0.196838, 0.0845878];
  sigma = [0.023917, 0.0301561, 0.0272508, 0.0290198, 0.0268338, 0.0347299];
  level = [0.6, 0.6, 0.6, 0.6, 0.6, 0.6];
}

//----------------------------------------------------
// Normal latent variables
// dim = NOBS x NFACTORS (every obs have its own value)
// dim = 1 x NFACTORS    (all obs has the same values)
// dim = 1 x 1           (all obs components have the same value)
// range = (-inf,+inf)
// default value = 0
//----------------------------------------------------
Z = {
  value = [0, 0, 0, 0];
  sigma = 0.1;
  level = 0.44;
}

//----------------------------------------------------
// Chi-squared latent variables
// dim = NOBS x 1 (each obs have its own value)
// dim = 1 x 1    (all obs have the same value)
// range = (0,+inf)
// default value = NU.value
//----------------------------------------------------
S = {
  value = 7.0;
  sigma = 0.5;
  level = 0.44;
}

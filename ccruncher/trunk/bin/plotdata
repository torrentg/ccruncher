#!/bin/sh

#=============================================================
# description: 
#   Use this script to generate the Probability Distribution
#   Function (pdf) plot for a creditcruncher output data file
#
# dependences:
#   shell, gnuplot, X11
#
# input:
#   ccruncher output data file (*.out)
#
# output:
#   a window or a file with the plot
#
# retcodes:
#   0    : OK
#   other: KO
#
#-------------------------------------------------------------
#
# 2005/05/22 - Gerard Torrent [gerard@fobos.generacio.com]
#   . initial release
#
#=============================================================

#-------------------------------------------------------------
# variables declaration
#-------------------------------------------------------------
progname=plotdata
version=0.3
tplot=pdf
binsize=1000
gterm=x11

#-------------------------------------------------------------
# version function
#-------------------------------------------------------------
version() {

  echo $progname-$version

}

#-------------------------------------------------------------
# copyright function
#-------------------------------------------------------------
copyright() {

  cat << _EOF_

   $progname is Copyright (C) 2003-2005 Gerard Torrent and licensed
     under the GNU General Public License, version 2. more info at
               http://www.generacio.com/ccruncher

_EOF_
}

#-------------------------------------------------------------
# usage function
#-------------------------------------------------------------
usage() {

  cat << _EOF_
  usage: $progname [options] <file>

  description:
    $progname is a shell script to plot the output data files 
    generates by ccruncher using gnuplot. more info at 
    http://www.generacio.com/ccruncher
  arguments:
    file     ccruncher output data file to plot
  options
    -p       plot Probability Distribution Function (default)
    -c       plot Cumulative Distribution Function
    -t term  gnuplot terminal to use (x11 by default)
    -b num   binsize used to construct the pdf histogram
    -h       show this message and exit
    -v       show version and exit
  return codes:
    0        OK. finished without errors
    1        KO. finished with errors
  examples:
    $progname portfolio-rest.out
    $progname -b 1000 portfolio-rest.out
    $progname -p -b 1000 portfolio-rest.out

_EOF_
}

#-------------------------------------------------------------
# readconf function
#-------------------------------------------------------------
readconf() {

  OPTIND=0

  while getopts 'pchvb:t:' opt
  do
    case $opt in
      p) tplot=pdf;;
      c) tplot=cdf;;
      b) binsize=$OPTARG;;
      t) gterm="$OPTARG";;
      v) version; 
         exit 0;;
      h) usage; 
         exit 0;;
     \?) echo "unknow option. use -h for more information"; 
         exit 1;;
      *) echo "unexpected error parsing arguments. Please report this bug sending";
         echo "$progname version and arguments at gerard@fobos.generacio.com";
         exit 1;;
    esac
  done

  shift `expr $OPTIND - 1`

  if [ "$*" != "" ]; then
    for arg in "$@"
    do
      if [ ! -f $arg ]; then
        echo "file $arg not exist";
        echo "please, try again";
        exit 1;
      fi
    done
  fi

  which gnuplot > /dev/null 2> /dev/null
  
  if [ $? != 0 ]; then
    echo "gnuplot not found. please report to system administrator";
    echo "gnuplot can be found at http://www.gnuplot.info/";
    exit 1;
  fi
}

#-------------------------------------------------------------
# plotpdf function
#-------------------------------------------------------------
plotpdf() {

  gnuplot -persist << _EOF_
    reset
    #set xrange [0.00:3484.45]
    set xlabel 'portfolio value'
    set ylabel 'number of ocurrences'
    set grid
    binsize=$binsize
    set title 'Portfolio Value Histogram'
    plot '$1' using (floor(\$2/binsize)*binsize):(1) smooth frequency with histeps notitle
_EOF_

}

#-------------------------------------------------------------
# main function
#-------------------------------------------------------------

readconf $@;
shift `expr $OPTIND - 1`
  
for filename in "$@"
do
  if [ $tplot = 'pdf' ]; then
    plotpdf $filename;
  fi
done

exit 0;

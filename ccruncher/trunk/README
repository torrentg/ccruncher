
CREDITCRUNCHER README
=====================

Install xerces-c package
--------------------------------

1. download binary package from http://xml.apache.org/xerces-c/
   don't be lazy, read docs, installation instructions, etc.

2. uncompress package
     gunzip xerces-c_2_6.tar.gz
     tar -xvf xerces-c_2_6.tar
   we sugest install xercesc at $CCRUNCHER/share/xercesc-2.6

3. modify your .profile file. adding the following lines
     XERCESROOT=<path_to_xerces_dir>
     export PATH=$PATH:$XERCESROOT/bin
     export LD_LIBRARY_PATH=$XERCESROOT/lib:$LD_LIBRARY_PATH
     export LIBRARY_PATH=$XERCESROOT/lib:$LIBRARY_PATH
     export C_INCLUDE_PATH=$XERCESROOT/include:$C_INCLUDE_PATH
     export CPLUS_INCLUDE_PATH=$XERCESROOT/include:$CPLUS_INCLUDE_PATH
     export XERCESC_NLS_HOME=$XERCESCROOT/msg


Installation from source package
--------------------------------

1. uncompress package
     gunzip ccruncher-0.1.tar.gz
     tar -xvf ccruncher-0.1.tar

2. install xerces-c package (explained before)

3. execute commands (read INSTALL file):
     cd ccruncher-0.1
     ./configure --prefix=$PWD
     make
     make check 
     make install


Installation from binary package
--------------------------------

1. uncompress package
     gunzip ccruncher-0.1.tar.gz
     tar -xvf ccruncher-0.1.tar

2. install xerces-c package (explained before)


Using CreditCruncher
--------------------------------

1. create your input file. Read documentation to perform this step

2. run CreditCruncher
     ${ccruncher_home}/bin/ccruncher --help
     ${ccruncher_home}/bin/ccruncher -hash=100 -f -v -path=./data <file.xml>

3. extract data from output files
     ${ccruncher_home}/bin/tabulate --help
     ${ccruncher_home}/bin/tabulate <./data/filex.xml>

4. process info using your prefered spreadsheet or 


Developers tips & tricks
--------------------------------

1. install xerces-c package (explained before)

2. create ./configure script
     aclocal
     autoconf
     automake -avc --warnings=all

3. compile project in debug mode
     ./configure --prefix=$PWD --enable-debug
     make
     make check

4. executing test suite
     src/tests

5. checking memory leaks
     valgrind --tool=memcheck --leak-check=yes <progname>

6. profiling executable
     ./path/progname (-> writes gmon.out because we compiled with -pg flag)
     gprof ./path/progname gmon.out



CreditCruncher Team
http://www.generacio.com/ccruncher/

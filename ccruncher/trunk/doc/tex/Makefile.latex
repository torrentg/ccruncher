%***************************************************************************
%
% CreditCruncher - A portfolio credit risk valorator
% Copyright (C) 2004 Gerard Torrent
%
% This program is free software; you can redistribute it and/or
% modify it under the terms of the GNU General Public License
% as published by the Free Software Foundation; either version 2
% of the License.
%
% This program is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.
%
% You should have received a copy of the GNU General Public License
% along with this program; if not, write to the Free Software
% Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
%
%
% user.tex - TeX documentation file
% --------------------------------------------------------------------------
%
% 2004/12/04 - Gerard Torrent [gerard@fobos.generacio.com]
%   . initial release
%
%***************************************************************************

# MAIN_TEX: In order to build your document, fill in the MAIN_TEX
# macro with the name of your main .tex file -- the one that you
# invoke LaTeX on.

MAIN_TEX        = user.tex

# OTHER_SRC_FILES: Put in the names of all the other files that your
# thesis depends on (e.g., other .tex files, figures, etc.) in the
# OTHER_SRC_FILES macro.  This is ensure that whenever one of the
# "other" files changes, "make" will rebuild your paper.

LISTINGS_FILES	= \
		  listings.cfg \
		  listings.sty \
		  lstdoc.sty \
		  lstlang1.sty \
		  lstlang2.sty \
		  lstlang3.sty \
		  lstmisc.sty \
		  lstpatch.sty

OTHER_SRC_FILES = \
                  refs.bib \
                  defs.tex \
		  version.tex \
                  titlepage.tex \
		  audience.tex \
                  introduction.tex \
		  release-notes.tex \
                  getting-started.tex \
                  mpi-details.tex \
		  ssi.tex \
                  commands.tex \
                  lam-ssi.tex \
                  mpi-ssi.tex \
                  debuggers.tex \
		  troubleshooting.tex \
                  misc.tex \
                  bibliography.tex \
		  $(LISTINGS_FILES)

# xfig figures.  .eps and .pdf files will be automatically generated
# from these.

FIG_FILES       =
PNG_FILES       = \
                lam-logo.png \
                ptl-logo.png

# Required commands

LATEX           = latex
PDFLATEX        = pdflatex
DVIPS           = dvips
MAKEINDEX       = makeindex
BIBTEX          = bibtex
FIG2DEV         = fig2dev
PNGTOPNM        = pngtopnm
PNMTOPS         = pnmtops

#########################################################################
#
# You should not need to edit below this line
#
#########################################################################

SUFFIXES        = .tex .dvi .ps .pdf .fig .eps .png

MAIN_DVI        = $(MAIN_TEX:.tex=.dvi)
MAIN_PS         = $(MAIN_TEX:.tex=.ps)
MAIN_PDF        = $(MAIN_TEX:.tex=.pdf)
EPS_FILES       = $(PNG_FILES:.png=.eps)
EPS_FIG_FILES   = $(FIG_FILES:.fig=.eps)
PDF_FIG_FILES   = $(FIG_FILES:.fig=.pdf)

#
# Some common target names
# Note that the default target is "ps"
#

ps: $(MAIN_PS) 
pdf: $(MAIN_PDF)

#
# Make the dependencies so that things build when they need to
#

$(MAIN_PS): $(MAIN_DVI)
$(MAIN_DVI): $(MAIN_TEX) $(CITE_TEX) $(OTHER_SRC_FILES) $(EPS_FIG_FILES) $(EPS_FILES)
$(MAIN_PDF): $(MAIN_TEX) $(CITE_TEX) $(OTHER_SRC_FILES) $(PDF_FIG_FILES) $(PNG_FILES)

#
# General rules
#

.fig.eps:
	$(FIG2DEV) -L eps $< $@

.fig.pdf:
	$(FIG2DEV) -L pdf $< $@

.png.eps:
	$(PNGTOPNM) $< | $(PNMTOPS) -noturn > $*.eps

.tex.dvi:
	$(LATEX) $*
	@if ( grep 'LaTeX Warning: Label(s) may' $*.log > /dev/null ); \
	then $(LATEX) $* ; else :; fi
	@ if ( grep 'Writing index file' $*.log > /dev/null ); \
	then $(MAKEINDEX) $* ; $(LATEX) $* ; fi
	@-if ( grep 'LaTeX Warning: Citation' $*.log > /dev/null ); then \
	  if test "$(CHAP_CITE)" ; then \
	    for file in bogus $(CHAP_CITE) ; do \
	      if test "$$file" != "bogus"; then \
		$(BIBTEX) $$file ; \
	      fi ; \
	    done ; \
	  else \
	    $(BIBTEX) $* ; \
	  fi ; \
	  $(LATEX) $* ; \
	fi
	@if ( grep 'LaTeX Warning: Label(s) may' $*.log > /dev/null || \
	      grep 'LaTeX Warning: Citation' $*.log > /dev/null || \
	      grep 'No file' $*.log > /dev/null); \
	then $(LATEX) $* ; else :; fi
	@if ( grep 'LaTeX Warning: Label(s) may' $*.log > /dev/null || \
	      grep 'LaTeX Warning: Citation' $*.log > /dev/null); \
	then $(LATEX) $* ; else :; fi
	@if ( grep 'LaTeX Warning: Label(s) may' $*.log > /dev/null || \
	      grep 'LaTeX Warning: Citation' $*.log > /dev/null); \
	then $(LATEX) $* ; else :; fi

.dvi.ps:
	$(DVIPS) -o $*.ps $*

.tex.pdf:
	$(PDFLATEX) $*
	@if ( grep 'LaTeX Warning: Label(s) may' $*.log > /dev/null ); \
	then $(PDFLATEX) $* ; else :; fi
	@ if ( grep 'Writing index file' $*.log > /dev/null ); \
	then $(MAKEINDEX) $* ; $(PDFLATEX) $* ; fi
	@-if ( grep 'LaTeX Warning: Citation' $*.log > /dev/null ); then \
	  if test "$(CHAP_CITE)" ; then \
	    for file in bogus $(CHAP_CITE) ; do \
	      if test "$$file" != "bogus"; then \
		$(BIBTEX) $$file ; \
	      fi ; \
	    done ; \
	  else \
	    $(BIBTEX) $* ; \
	  fi ; \
	  $(PDFLATEX) $* ; \
	fi
	@if ( grep 'LaTeX Warning: Label(s) may' $*.log > /dev/null || \
	      grep 'LaTeX Warning: Citation' $*.log > /dev/null || \
	      grep 'No file' $*.log > /dev/null); \
	then $(PDFLATEX) $* ; else :; fi
	@if ( grep 'LaTeX Warning: Label(s) may' $*.log > /dev/null || \
	      grep 'LaTeX Warning: Citation' $*.log > /dev/null); \
	then $(PDFLATEX) $* ; else :; fi
	@if ( grep 'LaTeX Warning: Label(s) may' $*.log > /dev/null || \
	      grep 'LaTeX Warning: Citation' $*.log > /dev/null); \
	then $(PDFLATEX) $* ; else :; fi

#
# Standard targets
#

clean:
	/bin/rm -f *~ *.bak *%
	/bin/rm -f *.log *.aux *.dvi *.blg *.toc *.bbl *.lof *.lot \
		*.idx *.ilg *.ind *.out \
		$(MAIN_PS) $(MAIN_DVI) $(MAIN_PDF) \
		$(EPS_FIG_FILES) $(EPS_FILES) $(PDF_FIG_FILES)

